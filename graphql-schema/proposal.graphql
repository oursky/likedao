enum ProposalType {
  Text
  ParameterChange
  CommunityPoolSpend
  SoftwareUpgrade
  CancelSoftwareUpgrade
}

enum ProposalStatus {
  Unspecified
  DepositPeriod
  VotingPeriod
  Passed
  Rejected
  Failed
  Invalid
}

enum ProposalFilter {
  Voting
  Deposit
  Passed
  Rejected
}

enum ProposalVoteOption {
  Yes
  No
  Abstain
  NoWithVeto
}

type Proposal {
  id: ID!
  proposalId: Int!
  title: String!
  description: String!
  type: ProposalType!
  submitTime: DateTime!
  depositEndTime: DateTime
  votingStartTime: DateTime
  votingEndTime: DateTime
  proposerAddress: String!
  status: ProposalStatus!
  tallyResult: ProposalTallyResult
}

type ProposalEdge {
  cursor: String!
  node: Proposal!
}

type ProposalConnection {
  pageInfo: PageInfo!
  edges: [ProposalEdge!]!
  totalCount: Int!
}

type ProposalTallyResult {
  yes: BigInt!
  no: BigInt!
  noWithVeto: BigInt!
  abstain: BigInt!
  mostVoted: ProposalVoteOption!
}

input QueryProposalsInput {
  # Limit
  first: Int!
  # Offset
  after: Int!
  filter: ProposalFilter
  followingAddress: String
  searchTerm: String
}

extend type Query {
  proposals(input: QueryProposalsInput!): ProposalConnection!
}
